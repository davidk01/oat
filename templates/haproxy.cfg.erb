global
    daemon
    maxconn 1024

# default mode is http and least connection load balancing
defaults
    mode http
    balance leastconn
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

listen stats :11000
    mode http
    stats enable
    stats realm Haproxy\ Statistics
    stats uri /

# set up http service load balancing here assuming all http traffic goes
# through port 80
frontend http-in-80
    bind *:80

    # acl rules are pretty simple, take the pool name and attach .vip to it and see
    # if any of the headers match pool_name.vip
<% @http_pools.each do |http_pool| %>
    acl <%= http_pool %>-80 hdr_beg(host) -i <%= http_pool %>.vip
<% end %>

    # backend routing rules are also autogenerated from cloud formation yaml file
    # use_backend pool_name if pool_name
<% @http_pools.each do |http_pool| %>
    use_backend <%= http_pool %>-80 if <%= http_pool %>-80
<% end %>
    
# http backend section
<% @http_pools.each do |http_pool| %>
<% pool_servers = @pool_servers[http_pool] %>
backend <%= http_pool %>-80
<% pool_servers.each do |name, ip| %>
  server <%= name %> <%= ip %>:80
<% end %>

<% end %>

# do the same as above for port 8080
frontend http-in-8080
    bind *:8080

    # acl rules are pretty simple, take the pool name and attach .vip to it and see
    # if any of the headers match pool_name.vip
<% @http_pools.each do |http_pool| %>
    acl <%= http_pool %>-8080 hdr_beg(host) -i <%= http_pool %>.vip
<% end %>

    # backend routing rules are also autogenerated from cloud formation yaml file
    # use_backend pool_name if pool_name
<% @http_pools.each do |http_pool| %>
    use_backend <%= http_pool %>-8080 if <%= http_pool %>-8080
<% end %>

# http backend section
<% @http_pools.each do |http_pool| %>
<% pool_servers = @pool_servers[http_pool] %>
backend <%= http_pool %>-8080
<% pool_servers.each do |name, ip| %>
    server <%= name %> <%= ip %>:8080
<% end %>

<% end %>

# tcp backend section can be done purely with listen sections because we know the ports
# that we need to listen on
<% @tcp_pools.each do |tcp_pool_data| %>
<% tcp_pool = tcp_pool_data["pool-name"] %>
<% tcp_ports = tcp_pool_data["load-balance-ports"] %>
<% tcp_servers = @pool_servers[tcp_pool] %>
<% tcp_ports.each do |port| %>
listen <%= tcp_pool %>-<%= port %>

    mode tcp
    balance leastconn
    bind *:<%= port %>

<% tcp_servers.each do |name, ip| %>
    server <%= name %> <%= ip %>:<%= port %>

<% end %>

<% end %>
<% end %>
